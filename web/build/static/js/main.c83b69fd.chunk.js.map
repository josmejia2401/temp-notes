{"version":3,"sources":["components/Note/index.js","components/NoteList/index.js","components/Input/index.js","components/Button/index.js","components/Textarea/index.js","components/ComposerMain/index.js","components/Composer/index.js","components/NodeDetail/index.js","api.js","logo.svg","App.js","serviceWorker.js","index.js"],"names":["Note","this","props","title","description","onClick","className","dangerouslySetInnerHTML","__html","PureComponent","options","fitWidth","noteStyle","width","textDecoration","color","NodeList","notes","map","note","index","to","id","event","window","activeNote","layout","currentTarget","getBoundingClientRect","handleClick","style","Input","other","Button","children","Textarea","handleResize","e","element","target","height","scrollHeight","onInput","Component","initialState","value","noteToState","ComposerMain","handleChange","fieldName","name","setState","handleSubmit","preventDefault","onSubmit","newNote","state","replace","getValue","val","handleDelete","onDelete","bind","isEdit","type","placeholder","autoComplete","autoFocus","onChange","marginTop","Composer","onResize","textAreaRef","current","textAreaComposerEdit","document","getElementById","handleCancel","history","goBack","React","createRef","ref","NoteDetail","_onAddItem","item","_onDeleteItem","componentDidAppear","_onUpdateItem","onUpdate","active","componentDidEnter","_modal","classList","add","remove","modalClass","node","_modalBackdrop","_modalContent","NodeDetailTransition","path","match","foundNote","find","params","noteId","BASE_URL","location","host","includes","fetchJSON","url","option","fetch","headers","then","response","ok","Error","statusText","json","App","updateData","loading","getData","username","result","catch","error","console","log","handleAddNote","method","body","JSON","stringify","api","push","handleUpdateNote","findIndex","x","handleDeleteNote","splice","min","max","Math","floor","random","src","logo","alt","NoteList","Boolean","hostname","Bootstrap","component","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c83b69fd.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport './note.css';\n\nclass Note extends PureComponent {\n  render() {\n    const { title, description, onClick } = this.props;\n    return (\n      <div>\n        <div className=\"card note\" onClick={onClick}>\n          {title && <div className=\"note-title\">{title}</div>}\n          <div className=\"note-content\" dangerouslySetInnerHTML={{__html: description}}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Note;\n","import React from 'react';\nimport './note-list.css';\nimport Note from '../Note';\nimport Mansory from 'react-masonry-component';\nimport { Link } from 'react-router-dom';\n\nconst options = {\n  fitWidth: true\n};\n\nconst noteStyle = {\n  width: 240,\n  textDecoration: 'none',\n  color: 'inherit'\n};\n\nconst handleClick = (note, event) => {\n  window.activeNote = {\n    note,\n    layout: event.currentTarget.getBoundingClientRect()\n  }\n}\n\nconst NodeList = ({ notes }) => {\n  return (\n    <Mansory className=\"note-list-container\" options={options}>\n      {notes.map((note, index) =>\n        <Link key={index} to={`/notes/${note.id}`} onClick={event => handleClick(note, event)} style={noteStyle}>\n          <Note title={note.title} description={note.description} />\n        </Link>\n      )}\n    </Mansory>\n  );\n};\n\nexport default NodeList;\n","import React from 'react';\nimport './input.css';\n\nconst Input = ({ ...other }) => {\n  return (\n    <input {...other}/>\n  );\n};\n\nexport default Input;","import React from 'react';\nimport './button.css';\n\nconst Button = ({ children, ...other }) => {\n  return (\n    <button {...other}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;","import React, { Component } from 'react';\nimport './textarea.css';\n\nclass Textarea extends Component {\n  handleResize = e => {\n    const element = e.target;\n    if (element) {\n      element.style.height = 'auto';\n      element.style.height = element.scrollHeight + 'px';\n    }\n  }\n\n  render() {\n    const { ...other } = this.props;\n    return (\n      <textarea {...other}\n        onInput={this.handleResize}\n      />\n    );\n  }\n}\n\nexport default Textarea;","import React, { Component } from 'react';\nimport './composer.css';\nimport Input from '../Input';\nimport Button from '../Button';\nimport Textarea from '../Textarea';\n\nconst initialState = {\n  title: {\n    value: ''\n  },\n  description: {\n    value: ''\n  }\n};\n\nconst noteToState = note => {\n  return {\n    title: {\n      value: note.title,\n    },\n    description: {\n      value: note.description,\n    }\n  };\n}\n\nclass ComposerMain extends Component {\n  constructor(props) {\n    super(props);\n    let state = initialState;\n    if (props.note) {\n      state = noteToState(props.note);\n    } else if (window.activeNote && window.activeNote.note) {\n      state = noteToState(window.activeNote.note);\n    }\n    window.activeNote = {};\n    this.state = state;\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange = event => {\n    const fieldName = event.target.name;\n    this.setState({\n      [fieldName]: {\n        value: event.target.value\n      }\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { onSubmit, note } = this.props;\n    // TODO: validate\n    const title = this.state.title.value;\n    // convert line break to </br> tag\n    let description = \"\";\n    description = this.state.description.value.replace(/\\n/g, '</br>');\n    const newNote = {\n      title,\n      description\n    }\n    if (note) {\n      newNote.id = note.id;\n    }\n    onSubmit(newNote);\n    this.setState(initialState);\n  };\n\n  getValue = fieldName => {\n    let val = this.state[fieldName].value;\n    val = val.replace(/<\\s*\\/?br\\s*[\\/]?>/g, '\\n');\n    return val;\n  };\n\n  handleDelete = event => {\n    event.preventDefault();\n    this.props.onDelete && this.props.onDelete(this.props.note);\n  }\n\n  handleResize = e => {\n    if (e && e.target) {\n      const element = e.target;\n      element.style.height = 'auto';\n      element.style.height = element.scrollHeight + 'px';\n    }\n  }\n\n  render() {\n    const { isEdit } = this.props;\n    return (\n      <div className={`card-main composer-container ${isEdit ? 'edit' : ''}`}>\n        <form onSubmit={this.handleSubmit} className=\"input-form\">\n          <Input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n            autoComplete={\"false\"}\n            autoFocus\n            value={this.getValue('title')}\n            onChange={this.handleChange}\n          />\n          <Textarea \n            className=\"note-description\"\n            name=\"description\"\n            placeholder=\"Take a note...\"\n            value={this.getValue('description')}\n            onChange={this.handleChange}\n            onInput={this.handleResize}\n            style={{marginTop: '10px'}}\n          />\n          <div className=\"actions\">\n            {isEdit && <Button onClick={this.handleDelete}>Delete</Button>}\n            <Button>Done</Button> \n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ComposerMain;\n","import React, { Component } from 'react';\nimport './composer.css';\nimport Input from '../Input';\nimport Button from '../Button';\nimport Textarea from '../Textarea';\n\nconst initialState = {\n  title: {\n    value: ''\n  },\n  description: {\n    value: ''\n  }\n};\n\nconst noteToState = note => {\n  return {\n    title: {\n      value: note.title,\n    },\n    description: {\n      value: note.description,\n    }\n  };\n}\n\nclass Composer extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleResize = this.handleResize.bind(this);\n    this.textAreaRef = React.createRef();//React.useRef();//React.createRef();\n    let state = initialState;\n    if (props.note) {\n      state = noteToState(props.note);\n    } else if (window.activeNote && window.activeNote.note) {\n      state = noteToState(window.activeNote.note);\n    }\n    window.activeNote = {};\n    this.state = state;\n  };\n\n  componentDidMount() {\n    this.onResize();\n  };\n\n  onResize = () => {\n    if (this.textAreaRef && this.textAreaRef.current) {\n      const textAreaComposerEdit = document.getElementById(\"textAreaComposerEdit\");\n      if (textAreaComposerEdit) {\n        textAreaComposerEdit.style.height = 'auto';\n        textAreaComposerEdit.style.height = textAreaComposerEdit.scrollHeight + 'px';\n      }\n    }\n  };\n\n\n  handleChange = event => {\n    const fieldName = event.target.name;\n    this.setState({\n      [fieldName]: {\n        value: event.target.value\n      }\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { onSubmit, note } = this.props;\n    // TODO: validate\n    const title = this.state.title.value;\n    // convert line break to </br> tag\n    let description = \"\";\n    description = this.state.description.value.replace(/\\n/g, '</br>');\n    const newNote = {\n      title,\n      description\n    }\n    if (note) {\n      newNote.id = note.id;\n    }\n    onSubmit(newNote);\n    this.setState(initialState);\n  };\n\n  handleDelete = event => {\n    event.preventDefault();\n    this.props.onDelete && this.props.onDelete(this.props.note);\n  };\n\n  handleResize = e => {\n    if (e && e.target) {\n      const element = e.target;\n      element.style.height = 'auto';\n      element.style.height = element.scrollHeight + 'px';\n    }\n  };\n\n  handleCancel = e => {\n    if (e && e.target) {\n      e.preventDefault();\n      this.props.history.goBack();\n    }\n  };\n\n  getValue = fieldName => {\n    let val = this.state[fieldName].value;\n    val = val.replace(/<\\s*\\/?br\\s*[\\/]?>/g, '\\n');\n    return val;\n  };\n\n  render() {\n    const { isEdit } = this.props;\n    return (\n      <div className={`card composer-container ${isEdit ? 'edit' : ''}`}>\n        <form onSubmit={this.handleSubmit} className=\"input-form\">\n          <Input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n            autoComplete={\"false\"}\n            autoFocus\n            value={this.getValue('title')}\n            onChange={this.handleChange}\n            style={{ 'marginBottom': '5px' }}\n          />\n          <Textarea\n            id=\"textAreaComposerEdit\"\n            autoFocus\n            ref={this.textAreaRef}\n            className=\"note-description\"\n            name=\"description\"\n            placeholder=\"Take a note...\"\n            value={this.getValue('description')}\n            onChange={this.handleChange}\n            onInput={this.handleResize}\n            style={{ 'marginTop': '5px' }}\n          />\n          <div className=\"actions\">\n            <Button>Actualizar</Button>\n            {isEdit && <Button onClick={this.handleDelete}>Delete</Button>}\n            <Button onClick={this.handleCancel}>Cancel</Button>\n          </div>\n        </form>\n      </div>\n    );\n  };\n}\n\nexport default Composer;\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport './node-detail.css';\nimport Composer from '../Composer';\n\nclass NoteDetail extends Component {\n  constructor() {\n    super()\n    this.state = {\n      active: false\n    }\n  }\n\n  componentDidMount() {\n    this.componentDidEnter();\n  }\n\n  componentWillUnmount() {\n    this.componentDidAppear();\n  }\n\n  componentDidEnter() {\n    this._modal.classList.add('active');\n    this.setState({active: true});\n  }\n\n  componentDidAppear() {\n    this._modal.classList.remove('active');\n    this.setState({active: false});\n  }\n\n  _onAddItem = (item) => {\n\n  }\n\n  _onDeleteItem = (item) => {\n    const { onDelete } = this.props;\n    onDelete(item);\n    this.componentDidAppear();\n  }\n\n  _onUpdateItem = (item) => {\n    const { onUpdate } = this.props;\n    onUpdate(item);\n    this.componentDidAppear();\n  }\n\n  render() {\n    const modalClass = this.state.active ? 'active' : ''\n    const { note } = this.props\n    return (\n      <div className={`box-fill modal ${modalClass}`} ref={node => (this._modal = node)}>\n        <div className=\"box-fill modal-backdrop\" ref={node => (this._modalBackdrop = node)}/>\n        <div className=\"modal-content center-item\" ref={node => (this._modalContent = node)}>\n          <Composer note={note} isEdit onSubmit={this._onUpdateItem} onDelete={this._onDeleteItem} history={this.props.history} />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass NodeDetailTransition extends Component {\n  render() {\n    const { notes, onUpdate, onDelete } = this.props\n    return (\n      <Route\n        path=\"/notes/:noteId\"\n        children={({ match, ...rest }) => {\n          let foundNote = null;\n          if (match) {\n            foundNote = notes.find(note => note.id == match.params.noteId);\n          }\n          if (match && foundNote) {\n            return (<NoteDetail onUpdate={onUpdate} onDelete={onDelete} note={foundNote} history={this.props.history} />);\n          } else {\n            return null;\n          }\n        }}\n      />\n    );\n  }\n}\n\nexport default NodeDetailTransition;\n","var BASE_URL = 'http://localhost:9000/ms/temp-notes';\nif (window.location.host.includes(\"localhost:8080\")) {\n  BASE_URL = 'http://localhost:8080/ms/temp-notes';\n} else if (!window.location.host.includes(\"localhost\")) {\n  BASE_URL = '/ms/temp-notes';\n}\n\nconst fetchJSON = (url, option) => {\n  return fetch(`${BASE_URL}${url}`, {\n    ...option,\n    headers: {\n      'content-type': 'application/json',\n    } \n  }).then(response => {\n    if(response && !response.ok) {\n      //return new Error('error');\n      throw Error(response.statusText);\n    }\n    return response.json();\n  });\n}\n\nexport const getNotes = (username) => {\n  return fetchJSON(`/${username}/get-all`);\n}\n\nexport const getNote = (username, noteId) => {\n  return fetchJSON(`/${username}/${noteId}/get`);\n}\n\nexport const addNote = (username, note) => {\n  return fetchJSON(`/${username}/create`, {\n    method: 'POST',\n    body: JSON.stringify(note),\n  });\n}\n\nexport const updateNote = (username, note) => {\n  return fetchJSON(`/${username}/${note.id}/update`, {\n    method: 'PUT',\n    body: JSON.stringify(note),\n  });\n}\n\nexport const deleteNote = (username, note) => {\n  return fetchJSON(`/${username}/${note.id}/delete`, {\n    method: 'DELETE',\n  });\n}\n\nexport const login = (email, password) => {\n  return fetchJSON('/auth', {\n    method: 'POST',\n    body: JSON.stringify({\n      email,\n      password,\n    })\n  });\n}\n\nexport const register = (username, password, email) => {\n  return fetchJSON('/users', {\n    method: 'POST',\n    body: JSON.stringify({\n      username,\n      password,\n      email,\n    })\n  });\n}","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { Component } from 'react';\nimport NoteList from './components/NoteList';\nimport ComposerMain from './components/ComposerMain';\nimport NoteDetail from './components/NodeDetail';\nimport * as api from './api';\n\nimport './App.css';\nimport logo from './logo.svg';\n\nfunction PreLoading() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>car<code>GAN</code>go</p>\n        <a className=\"App-link\">Haciendo cosas increíbles</a>\n      </header>\n    </div>\n  );\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      notes: [],\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  updateData = () => {\n    this.setState({\n      notes: this.state.notes,\n      loading: false,\n    });\n  };\n\n  getData = () => {\n    api.getNotes('josmejia2401').then(result => {\n      if (result) {\n        this.state.notes = result;\n      }\n      this.updateData();\n    }).catch(error => {\n      console.log(error);\n      this.updateData();\n    });\n  }\n\n  handleAddNote = note => {\n    //note.id = this.getRandomInt(0, 9999);\n    //this.state.notes.push(note);\n    //this.updateData();\n    this.setState({ loading: true });\n    api.addNote('josmejia2401', note).then(result => {\n      if (result) {\n        this.state.notes.push(result);\n        this.updateData();\n      }\n    }).catch(error => {\n      console.log(error);\n      this.updateData();\n    });\n  };\n\n  handleUpdateNote = note => {\n    this.setState({ loading: true });\n    api.updateNote('josmejia2401', note).then(result => {\n      if (result) {\n        const index = this.state.notes.findIndex(x => x.id === note.id);\n        if (index !== -1) {\n          this.state.notes[index] = note;\n          this.updateData();\n        }\n        this.props.history.goBack();\n      }\n    }).catch(error => {\n      console.log(error);\n      this.updateData();\n    });\n  };\n\n  handleDeleteNote = note => {\n    this.setState({ loading: true });\n    api.deleteNote('josmejia2401', note).then(result => {\n      if (result) {\n        const index = this.state.notes.findIndex(x => x.id === note.id);\n        if (index !== -1) {\n          this.state.notes.splice(index, 1);\n          this.updateData();\n        }\n        this.props.history.goBack();\n      }\n    }).catch(error => {\n      console.log(error);\n      this.updateData();\n    });\n  };\n\n  render() {\n    const { notes, loading } = this.state;\n    if (loading) {\n      return  PreLoading();\n    } else {\n      return (\n        <div className=\"App\">\n          <ComposerMain onSubmit={this.handleAddNote} history={this.props.history} />\n          <NoteList notes={notes} onUpdate={this.handleUpdateNote} onDelete={this.handleDeleteNote} history={this.props.history} />\n          <NoteDetail onUpdate={this.handleUpdateNote} onDelete={this.handleDeleteNote} notes={notes} location={this.props.location} history={this.props.history} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n \nconst Bootstrap = () => {\n  return (\n    <BrowserRouter>\n      <Route path=\"/\" component={App} />\n    </BrowserRouter>\n  );\n};\n\nReactDOM.render(<Bootstrap />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}